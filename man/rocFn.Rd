% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/classification.R, R/roc.R
\name{rocFn}
\alias{rocFn}
\alias{rocFn,numeric,numeric-method}
\title{ROC Curve Coordinates}
\usage{
rocFn(labels, ind)

rocFn(labels, ind)

\S4method{rocFn}{numeric,numeric}(labels, ind)
}
\arguments{
\item{labels}{Logical vector of true stock statuses (TRUE=overfished)}

\item{scores}{Numeric vector of model predictions (e.g., B/BMSY ratios)}
}
\value{
A data frame containing:
  \itemize{
    \item TPR - True Positive Rate (Sensitivity)
    \item FPR - False Positive Rate (1-Specificity)
    \item labels - Ordered labels
    \item reference - Sorted scores
  }

Data.frame with columns:
\itemize{
  \item TPR: True Positive Rate (sensitivity)
  \item FPR: False Positive Rate (1 - specificity)
  \item labels: Ordered true labels
  \item reference: Threshold values
}
}
\description{
Calculates the coordinates for a Receiver Operating Characteristic (ROC) curve

Creates ROC curve data for stock status classification performance.
}
\examples{
\dontrun{
labels <- c(1,0,1,1,0)
scores <- c(0.9, 0.1, 0.8, 0.7, 0.3)
roc_coords <- rocFn(labels, scores)
}

obs=runif(100, 0.5, 1.5) < 1
pred=obs + rnorm(100, sd=0.3)
roc_data=rocFn(obs, pred)
# In this example, we first generate sample data for state and indicator vectors. 
# Generate sample data
state <- c(0.5, 2.3, 1.2, 1.8, 3.0, 0.7)
indicator <- c(0.6, 2.2, 1.1, 1.9, 2.8, 0.5)

# Then, we call the roc function to calculate ROC statistics and print the results.
# Calculate ROC statistics
roc_result=roc(state, indicator)

# Print the ROC statistics
roc_result

#Plot the ROC curve using the ggplot2 package. 

library(ggplot2)
ggplot(roc_result, aes(x = FPR, y = TPR)) +
  geom_line() +
  geom_abline(intercept = 0, slope = 1, linetype = "dashed") +
  labs(x = "False Positive Rate (FPR)", y = "True Positive Rate (TPR)") +
  ggtitle("ROC Curve") +
  theme_minimal()
  
  
}
